openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8000'
paths:
  /api/login:
    post:
      summary: ''
      operationId: postApiLogin
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: cary82@example.org
                password:
                  type: string
                  description: ''
                  example: excepturi
              required:
                - email
                - password
      security: []
  /api/logout:
    post:
      summary: ''
      operationId: postApiLogout
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/user:
    get:
      summary: ''
      operationId: getApiUser
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/register:
    post:
      summary: ''
      operationId: postApiRegister
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: aspernatur
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: nayeli.walsh@example.org
                password:
                  type: string
                  description: ''
                  example: qui
                mobile_number:
                  type: string
                  description: ''
                  example: enim
              required:
                - name
                - email
                - password
                - mobile_number
      security: []
  /api/admin/dashboard:
    get:
      summary: ''
      operationId: getApiAdminDashboard
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/country:
    get:
      summary: ''
      operationId: getApiCountry
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiCountry
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                country_name:
                  type: string
                  description: ''
                  example: similique
                country_code:
                  type: string
                  description: ''
                  example: et
                timezone_name:
                  type: string
                  description: ''
                  example: modi
                timezone_minutes:
                  type: number
                  description: ''
                  example: 31.21744
              required:
                - country_name
                - country_code
                - timezone_name
                - timezone_minutes
      security: []
  '/api/country/{id}':
    get:
      summary: ''
      operationId: getApiCountryId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiCountryId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: ''
      operationId: deleteApiCountryId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the country.'
        example: cupiditate
        required: true
        schema:
          type: string
  /api/role:
    get:
      summary: ''
      operationId: getApiRole
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiRole
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/role/{id}':
    get:
      summary: ''
      operationId: getApiRoleId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiRoleId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: ''
      operationId: deleteApiRoleId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the role.'
        example: deserunt
        required: true
        schema:
          type: string
  /api/permission:
    get:
      summary: ''
      operationId: getApiPermission
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiPermission
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/permission/{id}':
    get:
      summary: ''
      operationId: getApiPermissionId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiPermissionId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: ''
      operationId: deleteApiPermissionId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the permission.'
        example: consequatur
        required: true
        schema:
          type: string
  /api/role_permission:
    get:
      summary: ''
      operationId: getApiRole_permission
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiRole_permission
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/role_permission/{id}':
    get:
      summary: ''
      operationId: getApiRole_permissionId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiRole_permissionId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: ''
      operationId: deleteApiRole_permissionId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the role permission.'
        example: et
        required: true
        schema:
          type: string
  /api/user/dashboard:
    get:
      summary: ''
      operationId: getApiUserDashboard
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/network:
    get:
      summary: ''
      operationId: getApiNetwork
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiNetwork
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/network/{id}':
    get:
      summary: ''
      operationId: getApiNetworkId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiNetworkId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: ''
      operationId: deleteApiNetworkId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the network.'
        example: ipsa
        required: true
        schema:
          type: string
  /api/supplier:
    get:
      summary: ''
      operationId: getApiSupplier
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiSupplier
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/supplier/{id}':
    get:
      summary: ''
      operationId: getApiSupplierId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiSupplierId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: ''
      operationId: deleteApiSupplierId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the supplier.'
        example: natus
        required: true
        schema:
          type: string
  /api/device_type:
    get:
      summary: ''
      operationId: getApiDevice_type
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiDevice_type
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/device_type/{id}':
    get:
      summary: ''
      operationId: getApiDevice_typeId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiDevice_typeId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: ''
      operationId: deleteApiDevice_typeId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the device type.'
        example: impedit
        required: true
        schema:
          type: string
  /api/device_category:
    get:
      summary: ''
      operationId: getApiDevice_category
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiDevice_category
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/device_category/{id}':
    get:
      summary: ''
      operationId: getApiDevice_categoryId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiDevice_categoryId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: ''
      operationId: deleteApiDevice_categoryId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the device category.'
        example: impedit
        required: true
        schema:
          type: string
  /api/device_model:
    get:
      summary: ''
      operationId: getApiDevice_model
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiDevice_model
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/device_model/{id}':
    get:
      summary: ''
      operationId: getApiDevice_modelId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiDevice_modelId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: ''
      operationId: deleteApiDevice_modelId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the device model.'
        example: hic
        required: true
        schema:
          type: string
  /api/camera_type:
    get:
      summary: ''
      operationId: getApiCamera_type
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiCamera_type
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/camera_type/{id}':
    get:
      summary: ''
      operationId: getApiCamera_typeId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiCamera_typeId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: ''
      operationId: deleteApiCamera_typeId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the camera type.'
        example: maiores
        required: true
        schema:
          type: string
  /api/camera_category:
    get:
      summary: ''
      operationId: getApiCamera_category
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiCamera_category
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/camera_category/{id}':
    get:
      summary: ''
      operationId: getApiCamera_categoryId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiCamera_categoryId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: ''
      operationId: deleteApiCamera_categoryId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the camera category.'
        example: officiis
        required: true
        schema:
          type: string
  /api/camera_model:
    get:
      summary: ''
      operationId: getApiCamera_model
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiCamera_model
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/camera_model/{id}':
    get:
      summary: ''
      operationId: getApiCamera_modelId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiCamera_modelId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: ''
      operationId: deleteApiCamera_modelId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the camera model.'
        example: perspiciatis
        required: true
        schema:
          type: string
  /api/sim:
    get:
      summary: ''
      operationId: getApiSim
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiSim
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sim_imei_no:
                  type: string
                  description: ''
                  example: incidunt
                sim_mob_no:
                  type: string
                  description: ''
                  example: eos
              required:
                - sim_imei_no
                - sim_mob_no
      security: []
  '/api/sim/{id}':
    get:
      summary: ''
      operationId: getApiSimId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiSimId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: ''
      operationId: deleteApiSimId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the sim.'
        example: est
        required: true
        schema:
          type: string
  '/api/simsaveassign/{id}':
    put:
      summary: ''
      operationId: putApiSimsaveassignId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the simsaveassign.'
        example: et
        required: true
        schema:
          type: string
  '/api/simdeleteassign/{id}':
    put:
      summary: ''
      operationId: putApiSimdeleteassignId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the simdeleteassign.'
        example: ut
        required: true
        schema:
          type: string
  /api/device:
    get:
      summary: ''
      operationId: getApiDevice
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiDevice
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                device_imei_no:
                  type: string
                  description: ''
                  example: et
                ccid:
                  type: string
                  description: ''
                  example: optio
                uid:
                  type: string
                  description: ''
                  example: fugit
              required:
                - device_imei_no
                - ccid
                - uid
      security: []
  '/api/device/{id}':
    get:
      summary: ''
      operationId: getApiDeviceId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiDeviceId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: ''
      operationId: deleteApiDeviceId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the device.'
        example: aut
        required: true
        schema:
          type: string
  '/api/devicesaveassign/{id}':
    put:
      summary: ''
      operationId: putApiDevicesaveassignId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the devicesaveassign.'
        example: quo
        required: true
        schema:
          type: string
  '/api/devicedeleteassign/{id}':
    put:
      summary: ''
      operationId: putApiDevicedeleteassignId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the devicedeleteassign.'
        example: corporis
        required: true
        schema:
          type: string
  /api/camera:
    get:
      summary: ''
      operationId: getApiCamera
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiCamera
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                serial_no:
                  type: string
                  description: ''
                  example: iusto
                id_no:
                  type: string
                  description: ''
                  example: aut
              required:
                - serial_no
                - id_no
      security: []
  '/api/camera/{id}':
    get:
      summary: ''
      operationId: getApiCameraId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiCameraId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: ''
      operationId: deleteApiCameraId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the camera.'
        example: et
        required: true
        schema:
          type: string
  '/api/camerasaveassign/{id}':
    put:
      summary: ''
      operationId: putApiCamerasaveassignId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the camerasaveassign.'
        example: dolorem
        required: true
        schema:
          type: string
  '/api/cameradeleteassign/{id}':
    put:
      summary: ''
      operationId: putApiCameradeleteassignId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the cameradeleteassign.'
        example: quibusdam
        required: true
        schema:
          type: string
  /api/camera_issue:
    get:
      summary: ''
      operationId: getApiCamera_issue
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiCamera_issue
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/camera_issue/{id}':
    get:
      summary: ''
      operationId: getApiCamera_issueId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiCamera_issueId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: ''
      operationId: deleteApiCamera_issueId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the camera issue.'
        example: tenetur
        required: true
        schema:
          type: string
  /api/device_issue:
    get:
      summary: ''
      operationId: getApiDevice_issue
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiDevice_issue
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/device_issue/{id}':
    get:
      summary: ''
      operationId: getApiDevice_issueId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiDevice_issueId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: ''
      operationId: deleteApiDevice_issueId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the device issue.'
        example: voluptatem
        required: true
        schema:
          type: string
  /api/client:
    get:
      summary: ''
      operationId: getApiClient
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'No clients found.'
                  status_code: 404
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'No clients found.'
                  status_code:
                    type: integer
                    example: 404
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiClient
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/client/{id}':
    get:
      summary: ''
      operationId: getApiClientId
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'Client not found.'
                  status_code: 404
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Client not found.'
                  status_code:
                    type: integer
                    example: 404
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiClientId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: ''
      operationId: deleteApiClientId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the client.'
        example: 11
        required: true
        schema:
          type: integer
  /api/dealer:
    get:
      summary: ''
      operationId: getApiDealer
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'No dealers found.'
                  status_code: 404
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'No dealers found.'
                  status_code:
                    type: integer
                    example: 404
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiDealer
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/dealer/{id}':
    get:
      summary: ''
      operationId: getApiDealerId
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'Dealer not found.'
                  status_code: 404
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Dealer not found.'
                  status_code:
                    type: integer
                    example: 404
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiDealerId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: ''
      operationId: deleteApiDealerId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the dealer.'
        example: 5
        required: true
        schema:
          type: integer
  /api/subdealer:
    get:
      summary: ''
      operationId: getApiSubdealer
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'No subdealers found.'
                  status_code: 404
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'No subdealers found.'
                  status_code:
                    type: integer
                    example: 404
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiSubdealer
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/subdealer/{id}':
    get:
      summary: ''
      operationId: getApiSubdealerId
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'Subdealer not found.'
                  status_code: 404
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Subdealer not found.'
                  status_code:
                    type: integer
                    example: 404
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiSubdealerId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: ''
      operationId: deleteApiSubdealerId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the subdealer.'
        example: 6
        required: true
        schema:
          type: integer
  /api/vehicle:
    get:
      summary: ''
      operationId: getApiVehicle
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'No vehicles found.'
                  status_code: 404
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'No vehicles found.'
                  status_code:
                    type: integer
                    example: 404
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiVehicle
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/vehicle/{id}':
    get:
      summary: ''
      operationId: getApiVehicleId
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'Vehicle not found.'
                  status_code: 404
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Vehicle not found.'
                  status_code:
                    type: integer
                    example: 404
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiVehicleId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: ''
      operationId: deleteApiVehicleId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the vehicle.'
        example: 1
        required: true
        schema:
          type: integer
  /api/vehicle_type:
    get:
      summary: ''
      operationId: getApiVehicle_type
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'No device types found.'
                  status_code: 404
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'No device types found.'
                  status_code:
                    type: integer
                    example: 404
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiVehicle_type
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  '/api/vehicle_type/{id}':
    get:
      summary: ''
      operationId: getApiVehicle_typeId
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: false
                  message: 'Vehicle Type not found.'
                  status_code: 404
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: 'Vehicle Type not found.'
                  status_code:
                    type: integer
                    example: 404
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiVehicle_typeId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    delete:
      summary: ''
      operationId: deleteApiVehicle_typeId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the vehicle type.'
        example: 19
        required: true
        schema:
          type: integer
  /api/sim_import:
    post:
      summary: ''
      operationId: postApiSim_import
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/device_import:
    post:
      summary: ''
      operationId: postApiDevice_import
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/camera_import:
    post:
      summary: ''
      operationId: postApiCamera_import
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
tags:
  -
    name: Endpoints
    description: ''
